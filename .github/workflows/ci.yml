name: CI

env:
  IMAGE_NAME: meow-on-rails

on:
  push:
    branches:
      - main

jobs:
  e2e_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install system dependencies for Playwright
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwoff1 \
            libvpx7 \
            libevent-2.1-7 \
            libopus0 \
            libgstallocators-1.0-0 \
            libgstapp-1.0-0 \
            libgstpbutils-1.0-0 \
            libgstaudio-1.0-0 \
            libgstgl-1.0-0 \
            libgsttag-1.0-0 \
            libgstvideo-1.0-0 \
            libgstcodecparsers-1.0-0 \
            libgstfft-1.0-0 \
            libharfbuzz-icu0 \
            libhyphen0 \
            libmanette-0.2-0 \
            libflite1 \
            libflite_usenglish1 \
            libflite_cmu_grapheme_lang1 \
            libflite_cmu_grapheme_lex1 \
            libflite_cmu_indic_lang1 \
            libflite_cmu_indic_lex1 \
            libflite_cmulex1 \
            libflite_cmu_time_awb1 \
            libflite_cmu_us_awb1 \
            libflite_cmu_us_kal16_1 \
            libflite_cmu_us_kal1 \
            libflite_cmu_us_rms1 \
            libflite_cmu_us_slt1 \
            libGLESv2-2 \
            libx264-160

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.1'
          bundler-cache: true
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: bundle install
      
      - name: Install playwright
        run: npx playwright install

      - name: Run Playwright Tests
        run: npx playwright test e2e/tests --workers=1
        continue-on-error: true

      - name: Create zip file with Playwright report and test results
        run: zip -r reports.zip playwright-report/ test-results/
      
      - name: Upload combined report
        uses: actions/upload-artifact@v4
        with:
          name: combined-reports
          path: reports.zip
          retention-days: 30

      - name: Publish Test Summary Results
        run: npx github-actions-ctrf ctrf/ctrf-results.json

      - name: Check test results from JSON
        id: check-test-results
        run: |
          status=$(jq -r '.status' test-results/.last-run.json)
          if [ "$status" == "failed" ]; then
            echo "Tests failed"
            exit 1
          else
            echo "Tests passed"
          fi

  build:
    runs-on: ubuntu-latest
    needs: e2e_test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
            context: .
            push: true
            tags: |
              ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest